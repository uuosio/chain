name: tests

on:
  push:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        python-version: [3.9]
        os: ['windows-latest', 'macos-12', 'ubuntu-20.04']
        # python-version: [3.9]
        # os: ['ubuntu-18.04']
      fail-fast: false
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.19'
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools
          python -m pip install wheel
          python -m pip install pytest
      - name: Install uuosio.gscdk
        run: |
          python -m pip install -U pyeoskit
          python -m pip install -U gscdk
      - name: Install EOS test framework
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          python -m pip install ipyeos
      - name: Install binaryen on ubuntu
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          set -e
          curl -L https://github.com/WebAssembly/binaryen/releases/download/version_109/binaryen-version_109-x86_64-linux.tar.gz | tar xzf -
          echo "`pwd`/binaryen-version_109/bin" > $GITHUB_PATH
      - name: Install binaryen on macos
        if: ${{ matrix.os == 'macos-12' }}
        run: |
          set -e
          curl -L https://github.com/WebAssembly/binaryen/releases/download/version_109/binaryen-version_109-x86_64-macos.tar.gz | tar xzf -
          echo "`pwd`/binaryen-version_109/bin" > $GITHUB_PATH
      # - name: Test compiler
      #   if: ${{ matrix.os == 'windows-latest' }}
      #   working-directory: tests
      #   run: |
      #     python -m pytest -x -s test_compiler.py -k test_compiler
      - name: Run eos-debugger
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          PYTHON_SHARED_LIB_PATH=${{ env.pythonLocation }}/lib/libpython3.9.so python3 -m ipyeos eosdebugger &
      - name: Test execution
        if: ${{ matrix.os != 'windows-latest' }}
        working-directory: tests
        run: |
          go generate
          go-contract build -o tests.wasm
          PYTHON_SHARED_LIB_PATH=${{ env.pythonLocation }}/lib/libpython3.9.so ipyeos -m pytest -s -x test.py
          go test
          TEST_COVERAGE=1 go test --cover -coverpkg=$(python3 coverpkgs.py) -coverprofile=cover.out.tmp
          grep -v "generated.go" cover.out.tmp >cover.out
      - name: Upload coverage
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        working-directory: tests
        run: |
          curl -S -f https://codecov.io/bash -o codecov
          chmod +x codecov
          ./codecov -f cover.out
